// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Programa {
  id Int @id @default(autoincrement())
  nombre String @db.VarChar(40)
  abreviacion String @db.VarChar(10)
  fichas Ficha[]
}

model Ficha {
  codigo Int @id
  programaId Int
  programa Programa @relation(fields: [programaId], references: [id])
  usuarios Usuario[]
}

model Usuario {
  id Int @id @default(autoincrement())
  identificacion BigInt @unique
  primerNombre String @db.VarChar(20)
  segundoNombre String? @db.VarChar(20)
  primerApellido String @db.VarChar(20)
  segundoApellido String? @db.VarChar(20)
  correo String @db.VarChar(80) @unique
  contrasena String @db.VarChar(60)
  fichaId Int?
  rolId Int?
  fechaNacimiento DateTime
  img String @db.VarChar(255) @default("defaultpfp.png")
  ficha Ficha? @relation(fields: [fichaId], references: [codigo])
  rol Rol? @relation(fields: [rolId], references: [id])
}

model Rol {
  id Int @id @default(autoincrement())
  nombre String @db.VarChar(20)
  descripcion String @db.VarChar(255)
  icono String @db.VarChar(30) @default("User")
  usuarios Usuario[]
  permisos RolPermiso[]
}

model RolPermiso {
  permisoId Int
  rolId Int
  permiso Permiso @relation(fields: [permisoId], references: [id])
  rol Rol @relation(fields: [rolId], references: [id])
  valor Boolean @default(false)
  @@id([permisoId,rolId])
}

enum tipoPermiso {
  read
  write
  update
}

model Permiso {
  id Int @id @default(autoincrement())
  nombre String @db.VarChar(30)
  descripcion String @db.VarChar(255)
  tipo tipoPermiso @default(read)
  rutaId Int
  ruta RutaFront @relation(fields: [rutaId], references: [id])
  roles RolPermiso[]
}

model Modulo {
  id Int @id @default(autoincrement())
  nombre String @db.VarChar(80) @unique
  descripcion String @db.VarChar(255)
  icono String @default("Book")
  rutas RutaFront[]
}

model RutaFront {
  id Int @id @default(autoincrement())
  nombre String @db.VarChar(30)
  ruta String @db.VarChar(255)
  permisos Permiso[]
  moduloId Int
  modulo Modulo @relation(fields: [moduloId], references: [id])
}